---
- name: Installing andrewrothstein.unarchivedeps
  ansible.builtin.include_role:
    name: andrewrothstein.unarchivedeps
- name: Installing andrewrothstein.bash
  ansible.builtin.include_role:
    name: andrewrothstein.bash
- name: Installing andrewrothstein.temurin
  ansible.builtin.include_role:
    name: andrewrothstein.temurin
- name: Look for existing installation in {{ jruby_install_dir }}
  become: true
  become_user: root
  ansible.builtin.stat:
    path: '{{ jruby_install_dir }}'
  changed_when: false
  register: jruby_binary

- name: Downloading and installing jruby
  when: not jruby_binary.stat.exists
  block:
    - name: Downloading {{ jruby_url }}
      become: true
      become_user: root
      ansible.builtin.get_url:
        url: '{{ jruby_url }}'
        dest: '{{ jruby_tmp_tgz }}'
        checksum: '{{ jruby_checksum }}'
        mode: '644'
    - name: Unarchiving {{ jruby_tmp_tgz }}
      become: true
      become_user: root
      ansible.builtin.unarchive:
        remote_src: true
        src: '{{ jruby_tmp_tgz }}'
        dest: '{{ jruby_install_parent_dir }}'
        creates: '{{ jruby_install_dir }}'
  always:
    - name: Rrm -f {{ jruby_tmp_tgz }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ jruby_tmp_tgz }}'
        state: absent

- name: Linking {{ jruby_link_dir }} to {{ jruby_install_dir }}
  become: true
  become_user: root
  ansible.builtin.file:
    src: '{{ jruby_install_dir }}'
    dest: '{{ jruby_link_dir }}'
    state: link

- name: Adding jruby to default shell path
  become: true
  become_user: root
  with_items:
    - f: jruby.sh
      d: /etc/profile.d
      m: '644'
  ansible.builtin.template:
    src: '{{ item.f }}.j2'
    dest: '{{ item.d }}/{{ item.f }}'
    mode: '{{ item.m }}'
